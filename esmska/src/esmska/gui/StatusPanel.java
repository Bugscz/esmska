/*
 * StatusPanel.java
 *
 * Created on 4. leden 2008, 23:27
 */
package esmska.gui;

import esmska.data.Log;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.util.Date;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;

/** Status bar panel
 *
 * @author  ripper
 */
public class StatusPanel extends javax.swing.JPanel {

    private static final String RES = "/esmska/resources/";
    private static final DateFormat shortTimeFormat = DateFormat.getTimeInstance(DateFormat.SHORT);
    private Log log = new Log();
    private LogAction logAction = new LogAction();
    
    /** Creates new form StatusPanel */
    public StatusPanel() {
        initComponents();
        addToLog("Spuštění programu", new Date(), null);
    }

    /** add record to log */
    private void addToLog(String message, Date time, ImageIcon icon) {
        Log.Record record = new Log.Record(message, time, icon);
        log.addRecord(record);
    }
    
    /** Prints message to status bar
     * 
     * @param message text
     * @param printTime show timestamp before text
     * @param icon show icon with text. Use null for no icon.
     */
    public void setStatusMessage(String message, boolean printTime, ImageIcon icon) {
        Date time = new Date();
        if (printTime) {
            String timestamp = shortTimeFormat.format(new Date());
            statusMessageLabel.setText("[" + timestamp + "] " + message);
        } else {
            statusMessageLabel.setText(message);
        }
        statusMessageLabel.setIcon(icon);
        
        //add to log
        addToLog(message, time, icon);
    }

    /** Tells main form whether it should display task busy icon */
    public void setTaskRunning(boolean b) {
        if (b == false) {
            statusAnimationLabel.setIcon(new ImageIcon(getClass().getResource(RES + "task-idle.png")));
        } else {
            statusAnimationLabel.setIcon(new ImageIcon(getClass().getResource(RES + "task-busy.gif")));
        }
    }

    /** Set progress on progress bar
     * Use null to any parameter if you don't want to set it
     */
    public void setProgress(Integer value, String text, Boolean stringPainted, Boolean visible) {
        if (value != null) {
            progressBar.setValue(value);
        }
        if (text != null) {
            progressBar.setString(text);
        }
        if (stringPainted != null) {
            progressBar.setStringPainted(stringPainted);
        }
        if (visible != null) {
            progressBar.setVisible(visible);
        }
    }
    
    /** get action to show log frame */
    public Action getLogAction() {
        return logAction;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        statusMessageLabel.setText("Vítejte");
        statusMessageLabel.setToolTipText("Klikněte pro zobrazení aplikačního protokolu...");
        statusMessageLabel.setFocusable(false);
        statusMessageLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        statusMessageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusMessageLabelMouseClicked(evt);
            }
        });

        statusAnimationLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/esmska/resources/task-idle.png"))); // NOI18N
        statusAnimationLabel.setFocusable(false);

        progressBar.setMaximum(15);
        progressBar.setFocusable(false);
        progressBar.setString("Další sms za: ");
        progressBar.setStringPainted(true);
        progressBar.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(statusAnimationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(progressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusMessageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void statusMessageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMessageLabelMouseClicked
       logAction.actionPerformed(null);
    }//GEN-LAST:event_statusMessageLabelMouseClicked

    /** show the log frame */
    private class LogAction extends AbstractAction {
        private LogFrame logFrame;
        public LogAction() {
            super("Protokol");
            putValue(SMALL_ICON, new ImageIcon(getClass().getResource(RES + "log-16.png")));
            putValue(LARGE_ICON_KEY, new ImageIcon(getClass().getResource(RES + "log-48.png")));
            this.putValue(SHORT_DESCRIPTION,"Zobrazit aplikační protokol");
            putValue(MNEMONIC_KEY, KeyEvent.VK_P);
        }
        public void actionPerformed(ActionEvent e) {
            if (logFrame != null && logFrame.isVisible()) {
                logFrame.requestFocus();
                logFrame.toFront();
            } else {
                logFrame = new LogFrame();
                logFrame.setLog(log);
                logFrame.setLocationRelativeTo(MainFrame.getInstance());
                logFrame.setVisible(true);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    // End of variables declaration//GEN-END:variables
}
